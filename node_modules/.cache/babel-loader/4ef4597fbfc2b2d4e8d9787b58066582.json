{"ast":null,"code":"var _jsxFileName = \"/home/narek/Desktop/homeworks_1st/NarekYengibaryan/homework_narek01/src/components/search/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport ToDoList from '../todoList/ToDoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [users, setUsers] = useState([]);\n\n  function handleChange(e) {\n    setInputValue(e.target.value);\n  }\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos').then(data => data.json()).then(res => setUsers(res));\n  }, []); // useEffect(()=> {\n  //     setUsers((users)=> users.filter((item) => item.title.includes(inputValue)));\n  // },[inputValue])\n\n  const filtredUser = useMemo(() => {\n    return users.filter(item => item.title.includes(inputValue));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search ToDo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: inputValue,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      users: filtredUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"BSEFvKciwtxhRSq9BB87TKb7vgQ=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/narek/Desktop/homeworks_1st/NarekYengibaryan/homework_narek01/src/components/search/index.js"],"names":["useEffect","useMemo","useState","ToDoList","Search","inputValue","setInputValue","users","setUsers","handleChange","e","target","value","fetch","then","data","json","res","filtredUser","filter","item","title","includes"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,OAAnB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,SAASC,MAAT,GAAiB;AAAA;;AAEb,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BJ,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;;AACA,WAASO,YAAT,CAAsBC,CAAtB,EAAwB;AACpBJ,IAAAA,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH;;AAEDZ,EAAAA,SAAS,CAAC,MAAK;AACXa,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,GAAG,IAAIT,QAAQ,CAACS,GAAD,CAFrB;AAGH,GAJQ,EAIP,EAJO,CAAT,CARa,CAcb;AACA;AACA;;AAEA,QAAMC,WAAW,GAAGjB,OAAO,CAAC,MAAM;AAC9B,WAAOM,KAAK,CAACY,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBjB,UAApB,CAAvB,CAAP;AACH,GAF0B,CAA3B;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,QAAQ,EAAEI,YAAjB;AAA+B,QAAA,KAAK,EAAEJ,UAAtC;AAAkD,QAAA,IAAI,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEa;AAAjB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA9BQd,M;;KAAAA,M;AAgCT,eAAeA,MAAf","sourcesContent":["import {useEffect, useMemo, useState} from 'react';\nimport ToDoList from '../todoList/ToDoList';\n\nfunction Search(){\n\n    const [inputValue,setInputValue] = useState('');\n    const [users,setUsers] = useState([]);\n    function handleChange(e){\n        setInputValue(e.target.value);\n    }\n\n    useEffect(()=> {\n        fetch('https://jsonplaceholder.typicode.com/todos')\n        .then(data => data.json())\n        .then(res => setUsers(res));\n    },[]);\n\n    // useEffect(()=> {\n    //     setUsers((users)=> users.filter((item) => item.title.includes(inputValue)));\n    // },[inputValue])\n\n    const filtredUser = useMemo(() => {\n        return users.filter((item) => item.title.includes(inputValue))\n    })\n    return (\n        <div className=\"App\">\n            <div className='forInput'>\n                <h3>Search ToDo List</h3>\n                <input onChange={handleChange} value={inputValue} type='text' />\n            </div>\n            <ToDoList users={filtredUser}/>\n        </div>\n    )\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}